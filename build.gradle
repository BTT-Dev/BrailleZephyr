
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

group = 'org.aph.braillezephyr'
version = '0.1'
mainClassName = 'org.aph.braillezephyr.Main'

String swtJar
switch(System.getProperty('os.name').toLowerCase().split()[0])
{
case 'mac':
	swtJar = 'org.eclipse.swt.cocoa.macosx.x86_64'
	applicationDefaultJvmArgs.add('-XstartOnFirstThread')
	break

case 'windows':
	swtJar = 'org.eclipse.swt.win32.win32.x86_64'
	break

default:
	swtJar = 'org.eclipse.swt.gtk.linux.x86_64'
	break
}

dependencies {
	compile group: 'org.eclipse.swt', name: swtJar, version: '4.+'
	archives group: 'org.eclipse.swt', name: 'org.eclipse.swt.gtk.linux.x86_64', version: '4.+'
	archives group: 'org.eclipse.swt', name: 'org.eclipse.swt.gtk.linux.x86', version: '4.+'
	archives group: 'org.eclipse.swt', name: 'org.eclipse.swt.win32.win32.x86_64', version: '4.+'
	archives group: 'org.eclipse.swt', name: 'org.eclipse.swt.win32.win32.x86', version: '4.+'
	archives group: 'org.eclipse.swt', name: 'org.eclipse.swt.cocoa.macosx.x86_64', version: '4.+'
}

ext.defaultManifest = manifest {
	attributes('Main-Class': mainClassName,
	           'Implementation-Version': version)
}

jar {
	manifest = project.manifest {
		from defaultManifest
	}

	baseName = 'BrailleZephyr'
}

task linux32Jar(type: Jar) {
	appendix = 'linux-x86'

	manifest = project.manifest {
		from defaultManifest
	}

	from {
		zipTree configurations.archives.find { it.getName().contains('linux.x86-') }
	}

	with jar
}

task linux64Jar(type: Jar) {
	appendix = 'linux-x86_64'

	manifest = project.manifest {
		from defaultManifest
	}

	from {
		zipTree configurations.archives.find { it.getName().contains('linux.x86_64') }
	}

	with jar
}

task win32Jar(type: Jar) {
	appendix = 'windows-x86'

	manifest = project.manifest {
		from defaultManifest
	}

	from {
		zipTree configurations.archives.find { it.getName().contains('win32.x86-') }
	}

	with jar
}

task win64Jar(type: Jar) {
	appendix = 'windows-x86_64'

	manifest = project.manifest {
		from defaultManifest
	}

	from {
		zipTree configurations.archives.find { it.getName().contains('win32.x86_64') }
	}

	with jar
}

task macxJar(type: Jar) {
	appendix = 'macosx-x86_64'

	manifest = project.manifest {
		from defaultManifest
	}

	from {
		zipTree configurations.archives.find { it.getName().contains('macosx.x86_64') }
	}

	with jar
}

task allJars {
	dependsOn linux32Jar
	dependsOn linux64Jar
	dependsOn win32Jar
	dependsOn win64Jar
	dependsOn macxJar
}

apply plugin: 'eclipse'

task wrapper(type: Wrapper) {
	gradleVersion = '2.5'
}

repositories {
	mavenCentral()
}
